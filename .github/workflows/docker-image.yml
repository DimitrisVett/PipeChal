name: CGI CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Login to DockerHub
      run: docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build the Docker image
      run: docker build -t cgi
    - name: Run container with STDIN + test
      run: docker run -i cgi  
      # The above thing does not work. 
      # Probably would be better to have docker compose
      #     - name: Run tests
      #       run: docker run 
  
      #Test
      #   runs-on: ubuntu-latest
      #     if: github.event_name != 'schedule'
      #     steps:
      #       - uses: actions/checkout@v2
      #       - run: |
      #           docker-compose --file docker-compose.test.yml build
      #           #docker-compose --file docker-compose.test.yml run sut
  
  Deploy-Preview:
    #needs Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
    
    
